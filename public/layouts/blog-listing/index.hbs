{{!
  Template for the blog listing page.
  It receives `collectionItems` and `pagination` data from the page resolver.
}}
<div class="py-4">
    <header class="page-header mb-4 text-center">
        <div class="content-container">
            {{! Use the custom listing title if it exists, otherwise fall back to the page's main title }}
            <h1 style="color: var(--color-headings); font-family: var(--font-headings);">{{contentFile.frontmatter.title}}</h1>
            {{#if contentFile.frontmatter.listing_intro}}
                <p class="listing-intro" style="color: var(--color-text); opacity: 0.7;">{{contentFile.frontmatter.listing_intro}}</p>
            {{/if}}
        </div>
    </header>

    <div class="container">
        {{#if collectionItems}}
            <div class="post-list grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-gap">
                {{! Loop through each item provided by the page resolver }}
                {{#each collectionItems}}
                    {{! Render a partial for each item. This keeps the code clean. }}
                    {{! The partial name is namespaced to this layout: 'blog-listing/...' }}
                    {{> blog-listing/partials/post-card this}}
                {{/each}}
            </div>

            {{! Render the pagination controls if pagination data is available }}
            {{#if pagination}}
                <div class="pagination-controls mt-4 text-center">
                    {{{pager pagination}}}
                </div>
            {{/if}}
        {{else}}
            <div class="text-center py-4">
                <p style="color: var(--color-text); opacity: 0.7;">No blog posts have been published yet.</p>
            </div>
        {{/if}}
    </div>
</div>